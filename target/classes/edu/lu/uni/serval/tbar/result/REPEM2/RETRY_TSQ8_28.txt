RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(text);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(text); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(text);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(text); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(text);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(text); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(text);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(text); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(t);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(t); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(t);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(t); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"●●● test ●\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "●●● test ●";
red_line===
"●●● test ●"
start_offset===
7
end_offset===
19
Python OUTPUT===
s += "●●● test ●";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"e\".
scn.ruleId===
1854
scn.suspCodeStr===
e += "                                                   ";
red_line===
+= "                                                   "
start_offset===
4
end_offset===
60
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" test \" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
builder.element(new Label(" test ", 3, 0));
red_line===
" test "
start_offset===
28
end_offset===
36
Python OUTPUT===
builder.element(new Label(" test ", 3, 0));
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename field \"plotPoints\"
scn.ruleId===
1700
scn.suspCodeStr===
protected List<IPlotPoint> plotPoints;
red_line===
plotPoints
start_offset===
28
end_offset===
38
Python OUTPUT===
protected List<IPlotPoint> plotPoints;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(text);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(text); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(text);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(text); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(t);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(t); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(t);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(t); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(t);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(t); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(t);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(t); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unnecessary cast to \"double\".
scn.ruleId===
1905
scn.suspCodeStr===
double textsStep = (double) (height - 2) / (double) (texts.size() + 1);
red_line===
double
start_offset===
23
end_offset===
29
Python OUTPUT===
 double textsStep = ( double) (height - 2)  /  ( ) ( texts.size () + 1);
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"textsX\".
scn.ruleId===
1854
scn.suspCodeStr===
List<String> textsX = createTexts(AxisType.X, plotPoints.getMinX(), plotPoints.getDiffX(), countX);
red_line===
= createTexts(AxisType.X, plotPoints.getMinX(), plotPoints.getDiffX(), countX)
start_offset===
22
end_offset===
100
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unnecessary cast to \"double\".
scn.ruleId===
1905
scn.suspCodeStr===
double textsStep = (double) (width - labelsYWidth) / (double) (texts.size() + 1);
red_line===
double
start_offset===
23
end_offset===
29
Python OUTPUT===
 double textsStep = ( double) (width - labelsYWidth)  /  ( ) ( texts.size () + 1);
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 18.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Format specifiers should be used instead of string concatenation.
scn.ruleId===
3457
scn.suspCodeStr===
text = String.format("%" + labelsYWidth + "s", text);
red_line===
String.format("%" + labelsYWidth + "s", text)
start_offset===
12
end_offset===
57
Python OUTPUT===
text = String.format("%" + labelsYWidth + "s", text);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"labelsYWidth\" which hides the field declared at line 29.
scn.ruleId===
1117
scn.suspCodeStr===
int labelsYWidth = 0;
red_line===
labelsYWidth
start_offset===
6
end_offset===
18
Python OUTPUT===
int labelsYWidth = 0;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 19.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 18.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"dy1\".
scn.ruleId===
1854
scn.suspCodeStr===
dy1 = 1;
red_line===
= 1
start_offset===
7
end_offset===
10
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"dy1\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
int dy1 = 0;
red_line===
dy1
start_offset===
6
end_offset===
9
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"dy1\".
scn.ruleId===
1854
scn.suspCodeStr===
dy1 = -1;
red_line===
= -1
start_offset===
7
end_offset===
11
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
BUG
scn.errorMessage===
Remove this throw statement from this finally block.
scn.ruleId===
1143
scn.suspCodeStr===
throw new RuntimeException(e);
red_line===
throw
start_offset===
5
end_offset===
10
Python OUTPUT===
 thro RuntimeException(e); 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define and throw a dedicated exception instead of using a generic one.
scn.ruleId===
112
scn.suspCodeStr===
throw new RuntimeException(e);
red_line===
RuntimeException
start_offset===
13
end_offset===
29
Python OUTPUT===
throw new RuntimeException(e);
isFixed===
false
==================
RuleType===
BUG
scn.errorMessage===
Cast one of the operands of this subtraction operation to a \"double\".
scn.ruleId===
2184
scn.suspCodeStr===
double distance = Math.sqrt(Math.pow(x - x1, 2) + Math.pow(y - y1, 2));
red_line===
-
start_offset===
43
end_offset===
44
Python OUTPUT===
 double distance = Math.sqrt( Math.pow(x - x1, 2) + Math.pow(y - y1, 2));
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"dx2\".
scn.ruleId===
1854
scn.suspCodeStr===
dx2 = 1;
red_line===
= 1
start_offset===
7
end_offset===
10
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"dx2\".
scn.ruleId===
1854
scn.suspCodeStr===
dx2 = 0;
red_line===
= 0
start_offset===
7
end_offset===
10
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"dx2\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
int dx2 = 0;
red_line===
dx2
start_offset===
6
end_offset===
9
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"dx2\".
scn.ruleId===
1854
scn.suspCodeStr===
dx2 = -1;
red_line===
= -1
start_offset===
7
end_offset===
11
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"dx1\".
scn.ruleId===
1854
scn.suspCodeStr===
dx1 = -1;
red_line===
= -1
start_offset===
7
end_offset===
11
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"dx1\".
scn.ruleId===
1854
scn.suspCodeStr===
dx1 = 1;
red_line===
= 1
start_offset===
7
end_offset===
10
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"dx1\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
int dx1 = 0;
red_line===
dx1
start_offset===
6
end_offset===
9
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
BUG
scn.errorMessage===
A \"NullPointerException\" could be thrown; \"set\" is nullable here.
scn.ruleId===
2259
scn.suspCodeStr===
set.add(layer);
red_line===
set.add
start_offset===
3
end_offset===
10
Python OUTPUT===
set.add(layer);
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"width\" which hides the field declared at line 26.
scn.ruleId===
1117
scn.suspCodeStr===
int width = this.width;
red_line===
width
start_offset===
6
end_offset===
11
Python OUTPUT===
int width = this.width;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"highlights\" which hides the field declared at line 31.
scn.ruleId===
1117
scn.suspCodeStr===
EnumSet<CellPosition> highlights = getHighlightedNeighborCells(c + 1, r + 1);
red_line===
highlights
start_offset===
26
end_offset===
36
Python OUTPUT===
EnumSet<CellPosition> highlights = getHighlightedNeighborCells(c + 1, r + 1);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 25.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected Map<Class<IElement>, Set<IElement>> elementsByClass = new HashMap<Class<IElement>, Set<IElement>>();
red_line===
<Class<IElement>, Set<IElement>>
start_offset===
76
end_offset===
108
Python OUTPUT===
<> new HashMap < Class < IElement > , Set < IElement >> ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected List<ILayer> layers = new ArrayList<ILayer>();
red_line===
<ILayer>
start_offset===
46
end_offset===
54
Python OUTPUT===
<> > layers = new ArrayList < ILayer > ( ) ;
isFixed===
true
==================
RuleType===
BUG
scn.errorMessage===
A \"NullPointerException\" could be thrown; \"set\" is nullable here.
scn.ruleId===
2259
scn.suspCodeStr===
set.add(element);
red_line===
set.add
start_offset===
4
end_offset===
11
Python OUTPUT===
set.add(element);
isFixed===
true
==================
RuleType===
BUG
scn.errorMessage===
A \"NullPointerException\" could be thrown; \"map\" is nullable here.
scn.ruleId===
2259
scn.suspCodeStr===
map.put(typedId, ti);
red_line===
map.put
start_offset===
5
end_offset===
12
Python OUTPUT===
map.put(typedId, ti);
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
this.lines = new ArrayList<StringBuilder>(height);
red_line===
<StringBuilder>
start_offset===
28
end_offset===
43
Python OUTPUT===
<> new ArrayList < StringBuilder > ( height ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Immediately return this expression instead of assigning it to the temporary variable \"c\".
scn.ruleId===
1488
scn.suspCodeStr===
char c = line.charAt(x);
red_line===
line.charAt(x)
start_offset===
11
end_offset===
25
Python OUTPUT===
char c = line.charAt(x);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"line\".
scn.ruleId===
1854
scn.suspCodeStr===
StringBuilder line = lines.get(y);
red_line===
= lines.get(y)
start_offset===
21
end_offset===
35
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
set = new LinkedHashSet<IElement>();
red_line===
<IElement>
start_offset===
28
end_offset===
38
Python OUTPUT===
<> < IElement > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│                   │\n\" 25 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│                   │\n";
red_line===
"│                   │\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "│                   │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"└───────────────────┘\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "└───────────────────┘";
red_line===
"└───────────────────┘"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += "└───────────────────┘";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
ICanvas canvas = render.render(builder.build());
red_line===
= render.render(builder.build())
start_offset===
17
end_offset===
49
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"└──────────────────────────────────────────────────────────────────────────────┘\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
expected += "└──────────────────────────────────────────────────────────────────────────────┘";
red_line===
"└──────────────────────────────────────────────────────────────────────────────┘"
start_offset===
14
end_offset===
96
Python OUTPUT===
expected += "└──────────────────────────────────────────────────────────────────────────────┘";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"e\".
scn.ruleId===
1854
scn.suspCodeStr===
e += "                                                            ";
red_line===
+= "                                                            "
start_offset===
5
end_offset===
70
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<String> lines = new ArrayList<String>();
red_line===
<String>
start_offset===
36
end_offset===
44
Python OUTPUT===
<> lines = new ArrayList < String > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"PseudoText\" 7 times.
scn.ruleId===
1192
scn.suspCodeStr===
PseudoText t = new PseudoText("PseudoText", false);
red_line===
"PseudoText"
start_offset===
32
end_offset===
44
Python OUTPUT===
PseudoText t = new PseudoText("PseudoText", false);
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \n\" 16 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          \n";
red_line===
"          \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "          \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"     *                                                                     *    \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "     *                                                                     *    \n";
red_line===
"     *                                                                     *    \n"
start_offset===
7
end_offset===
91
Python OUTPUT===
s += "     *                                                                     *    \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"    │     \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "    │     \n";
red_line===
"    │     \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "    │     \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│  │      \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│  │      \n";
red_line===
"│  │      \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "│  │      \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"canvas\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
ICanvas canvas = new Canvas(19, 11);
red_line===
canvas
start_offset===
10
end_offset===
16
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"context\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
IContext context = mock(IContext.class);
red_line===
context
start_offset===
11
end_offset===
18
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┃       ┃       │       │ \n\" 9 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┃       ┃       │       │ \n";
red_line===
" ┃       ┃       │       │ \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += " ┃       ┃       │       │ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"├─────┼──────┼─────┤\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "├─────┼──────┼─────┤\n";
red_line===
"├─────┼──────┼─────┤\n"
start_offset===
7
end_offset===
31
Python OUTPUT===
s += "├─────┼──────┼─────┤\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
ICanvas canvas = new Canvas(19, 11);
red_line===
= new Canvas(19, 11)
start_offset===
17
end_offset===
37
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                       \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                       \n";
red_line===
"                       \n"
start_offset===
7
end_offset===
34
Python OUTPUT===
s += "                       \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┌───────┲━━━━━━━┓ \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┌───────┲━━━━━━━┓ \n";
red_line===
" ┌───────┲━━━━━━━┓ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " ┌───────┲━━━━━━━┓ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┃                   ┃ \n\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┃                   ┃ \n";
red_line===
" ┃                   ┃ \n"
start_offset===
7
end_offset===
34
Python OUTPUT===
s += " ┃                   ┃ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"canvas\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
ICanvas canvas = new Canvas(19, 11);
red_line===
canvas
start_offset===
10
end_offset===
16
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" │       │       │ \n\" 24 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " │       │       │ \n";
red_line===
" │       │       │ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " │       │       │ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│         │         │\n\" 25 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│         │         │\n";
red_line===
"│         │         │\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "│         │         │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│                   │\n\" 31 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│                   │\n";
red_line===
"│                   │\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "│                   │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" └───────┴───────┴───────┘ \n\" 7 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " └───────┴───────┴───────┘ \n";
red_line===
" └───────┴───────┴───────┘ \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += " └───────┴───────┴───────┘ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│││││││││││││││││││││\n\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│││││││││││││││││││││\n";
red_line===
"│││││││││││││││││││││\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "│││││││││││││││││││││\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┃       ┃       ┃ \n\" 24 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┃       ┃       ┃ \n";
red_line===
" ┃       ┃       ┃ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " ┃       ┃       ┃ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(t);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(t); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"text\".
scn.ruleId===
1854
scn.suspCodeStr===
String text = canvas.getText();
red_line===
= canvas.getText()
start_offset===
14
end_offset===
32
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"text\".
scn.ruleId===
1854
scn.suspCodeStr===
text = canvas.getText();
red_line===
= canvas.getText()
start_offset===
7
end_offset===
25
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"s\".
scn.ruleId===
1854
scn.suspCodeStr===
String s = canvas.getText();
red_line===
= canvas.getText()
start_offset===
11
end_offset===
29
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(text);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(text); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"▌        ▌        ▌        ▌       ▐\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
e += "▌        ▌        ▌        ▌       ▐\n";
red_line===
"▌        ▌        ▌        ▌       ▐\n"
start_offset===
7
end_offset===
47
Python OUTPUT===
e += "▌        ▌        ▌        ▌       ▐\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"   *   *  \n\" 6 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "   *   *  \n";
red_line===
"   *   *  \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "   *   *  \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"  *                         * \n\" 6 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "  *                         * \n";
red_line===
"  *                         * \n"
start_offset===
7
end_offset===
41
Python OUTPUT===
s += "  *                         * \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"s\".
scn.ruleId===
1854
scn.suspCodeStr===
String s = canvas.getText();
red_line===
= canvas.getText()
start_offset===
12
end_offset===
30
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
3
end_offset===
13
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"e\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
String e = "";
red_line===
e
start_offset===
10
end_offset===
11
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"s\".
scn.ruleId===
1854
scn.suspCodeStr===
String s = canvas.getText();
red_line===
= canvas.getText()
start_offset===
11
end_offset===
29
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"s\".
scn.ruleId===
1854
scn.suspCodeStr===
String s = canvas.getText();
red_line===
= canvas.getText()
start_offset===
12
end_offset===
30
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"└──────────────────┘\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
e += "└──────────────────┘";
red_line===
"└──────────────────┘"
start_offset===
7
end_offset===
29
Python OUTPUT===
e += "└──────────────────┘";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \" 26 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          ";
red_line===
"          "
start_offset===
7
end_offset===
19
Python OUTPUT===
s += "          ";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas2.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas2.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas2.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas2.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \n\" 90 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          \n";
red_line===
"          \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "          \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"*        *\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
t += "*        *";
red_line===
"*        *"
start_offset===
7
end_offset===
19
Python OUTPUT===
t += "*        *";
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \" 11 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          ";
red_line===
"          "
start_offset===
7
end_offset===
19
Python OUTPUT===
s += "          ";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \n\" 33 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          \n";
red_line===
"          \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "          \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"Tes\n\nt\" 7 times.
scn.ruleId===
1192
scn.suspCodeStr===
Text t = new Text("Tes\n\nt", 1, 1, 3, 1);
red_line===
"Tes\n\nt"
start_offset===
20
end_offset===
30
Python OUTPUT===
Text t = new Text("Tes\n\nt", 1, 1, 3, 1);
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"▌        ▐\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "▌        ▐\n";
red_line===
"▌        ▐\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "▌        ▐\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"▌        ▌\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "▌        ▌\n";
red_line===
"▌        ▌\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "▌        ▌\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"e\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
String e = "";
red_line===
e
start_offset===
10
end_offset===
11
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
ICanvas canvas = render.render(builder.build());
red_line===
= render.render(builder.build())
start_offset===
18
end_offset===
50
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"e\".
scn.ruleId===
1854
scn.suspCodeStr===
e += "                                                            ";
red_line===
+= "                                                            "
start_offset===
5
end_offset===
70
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
3
end_offset===
13
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
42
end_offset===
54
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                                                                                \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
e += "                                                                                \n";
red_line===
"                                                                                \n"
start_offset===
7
end_offset===
91
Python OUTPUT===
e += "                                                                                \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> normalized = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
45
end_offset===
57
Python OUTPUT===
<> normalized = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 19.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 20.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"width\" which hides the field declared at line 21.
scn.ruleId===
1117
scn.suspCodeStr===
int width = this.width;
red_line===
width
start_offset===
6
end_offset===
11
Python OUTPUT===
int width = this.width;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 15.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 16.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"width\" which hides the field declared at line 17.
scn.ruleId===
1117
scn.suspCodeStr===
int width = this.width;
red_line===
width
start_offset===
6
end_offset===
11
Python OUTPUT===
int width = this.width;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"height\" which hides the field declared at line 18.
scn.ruleId===
1117
scn.suspCodeStr===
int height = this.height;
red_line===
height
start_offset===
6
end_offset===
12
Python OUTPUT===
int height = this.height;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 17.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"width\" which hides the field declared at line 19.
scn.ruleId===
1117
scn.suspCodeStr===
int width = this.width;
red_line===
width
start_offset===
6
end_offset===
11
Python OUTPUT===
int width = this.width;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"height\" which hides the field declared at line 20.
scn.ruleId===
1117
scn.suspCodeStr===
int height = this.height;
red_line===
height
start_offset===
6
end_offset===
12
Python OUTPUT===
int height = this.height;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 20.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"width\" which hides the field declared at line 21.
scn.ruleId===
1117
scn.suspCodeStr===
int width = this.width;
red_line===
width
start_offset===
6
end_offset===
11
Python OUTPUT===
int width = this.width;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"height\" which hides the field declared at line 22.
scn.ruleId===
1117
scn.suspCodeStr===
int height = this.height;
red_line===
height
start_offset===
6
end_offset===
12
Python OUTPUT===
int height = this.height;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename field \"overlay\"
scn.ruleId===
1700
scn.suspCodeStr===
protected ICanvas overlay;
red_line===
overlay
start_offset===
19
end_offset===
26
Python OUTPUT===
protected ICanvas overlay;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 19.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 20.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"width\" which hides the field declared at line 21.
scn.ruleId===
1117
scn.suspCodeStr===
int width = this.width;
red_line===
width
start_offset===
6
end_offset===
11
Python OUTPUT===
int width = this.width;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"height\" which hides the field declared at line 22.
scn.ruleId===
1117
scn.suspCodeStr===
int height = this.height;
red_line===
height
start_offset===
6
end_offset===
12
Python OUTPUT===
int height = this.height;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Refactor the code in order to not assign to this loop counter from within the loop body.
scn.ruleId===
127
scn.suspCodeStr===
breaksCount++;
red_line===
breaksCount
start_offset===
4
end_offset===
15
Python OUTPUT===
breaksCount++;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename field \"text\"
scn.ruleId===
1700
scn.suspCodeStr===
protected String text;
red_line===
text
start_offset===
18
end_offset===
22
Python OUTPUT===
protected String text;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPoint> points = new ArrayList<IPoint>();
red_line===
<IPoint>
start_offset===
37
end_offset===
45
Python OUTPUT===
<> points = new ArrayList < IPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 25.
scn.ruleId===
1117
scn.suspCodeStr===
int y = i / columns + 1;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = i / columns + 1;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 24.
scn.ruleId===
1117
scn.suspCodeStr===
int x = i % columns + 1;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = i % columns + 1;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 24.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 17.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"radius\" which hides the field declared at line 19.
scn.ruleId===
1117
scn.suspCodeStr===
int radius = this.radius;
red_line===
radius
start_offset===
6
end_offset===
12
Python OUTPUT===
int radius = this.radius;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 17.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 18.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected List<IElement> elements = new ArrayList<IElement>();
red_line===
<IElement>
start_offset===
50
end_offset===
60
Python OUTPUT===
<> > elements = new ArrayList < IElement > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected Map<Class<IElement>, Set<IElement>> elementsByClass = new HashMap<Class<IElement>, Set<IElement>>();
red_line===
<Class<IElement>, Set<IElement>>
start_offset===
76
end_offset===
108
Python OUTPUT===
<> new HashMap < Class < IElement > , Set < IElement >> ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Use \"Arrays.copyOf\", \"Arrays.asList\", \"Collections.addAll\" or \"System.arraycopy\" instead.
scn.ruleId===
3012
scn.suspCodeStr===
ancestors.add(iClazz);
red_line===
ancestors.add(iClazz);
start_offset===
3
end_offset===
25
Python OUTPUT===
ancestors.add(iClazz);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected List<ILayer> layers = new ArrayList<ILayer>();
red_line===
<ILayer>
start_offset===
46
end_offset===
54
Python OUTPUT===
<> > layers = new ArrayList < ILayer > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected Map<IElement, Set<ILayer>> layersByElement = new HashMap<IElement, Set<ILayer>>();
red_line===
<IElement, Set<ILayer>>
start_offset===
67
end_offset===
90
Python OUTPUT===
<> = new HashMap < IElement , Set < ILayer >> ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Immediately return this expression instead of assigning it to the temporary variable \"repeated\".
scn.ruleId===
1488
scn.suspCodeStr===
String repeated = new String(new char[count]).replace(NULL_CHAR + "", s);
red_line===
new String(new char[count]).replace(NULL_CHAR + "", s)
start_offset===
20
end_offset===
74
Python OUTPUT===
String repeated = new String(new char[count]).replace(NULL_CHAR + "", s);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"char1\".
scn.ruleId===
1854
scn.suspCodeStr===
char char1 = NULL_CHAR;
red_line===
= NULL_CHAR
start_offset===
15
end_offset===
26
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"││        │         │\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "││        │         │\n";
red_line===
"││        │         │\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "││        │         │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│ │                 │\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│ │                 │\n";
red_line===
"│ │                 │\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "│ │                 │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"┌───────────────────┐\n\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "┌───────────────────┐\n";
red_line===
"┌───────────────────┐\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "┌───────────────────┐\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│ ┌────────┐        │\n\" 6 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│ ┌────────┐        │\n";
red_line===
"│ ┌────────┐        │\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "│ ┌────────┐        │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│ └────────┘        │\n\" 6 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│ └────────┘        │\n";
red_line===
"│ └────────┘        │\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "│ └────────┘        │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│ │        │        │\n\" 16 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│ │        │        │\n";
red_line===
"│ │        │        │\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "│ │        │        │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          ";
red_line===
"          "
start_offset===
7
end_offset===
19
Python OUTPUT===
s += "          ";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"   *   *  \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "   *   *  \n";
red_line===
"   *   *  \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "   *   *  \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│        │\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│        │\n";
red_line===
"│        │\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "│        │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          \n";
red_line===
"          \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "          \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \n\" 6 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          \n";
red_line===
"          \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "          \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
ICanvas canvas = new Canvas(19, 11);
red_line===
= new Canvas(19, 11)
start_offset===
17
end_offset===
37
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"context\".
scn.ruleId===
1854
scn.suspCodeStr===
IContext context = mock(IContext.class);
red_line===
= mock(IContext.class)
start_offset===
19
end_offset===
41
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"context\".
scn.ruleId===
1854
scn.suspCodeStr===
IContext context = mock(IContext.class);
red_line===
= mock(IContext.class)
start_offset===
19
end_offset===
41
Python OUTPUT===
 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"context\".
scn.ruleId===
1854
scn.suspCodeStr===
IContext context = mock(IContext.class);
red_line===
= mock(IContext.class)
start_offset===
19
end_offset===
41
Python OUTPUT===
 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                           \" 11 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                           ";
red_line===
"                           "
start_offset===
7
end_offset===
36
Python OUTPUT===
s += "                           ";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" │       │       ┃       ┃ \n\" 12 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " │       │       ┃       ┃ \n";
red_line===
" │       │       ┃       ┃ \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += " │       │       ┃       ┃ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┏━━━━━━━┳━━━━━━━┓ \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┏━━━━━━━┳━━━━━━━┓ \n";
red_line===
" ┏━━━━━━━┳━━━━━━━┓ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " ┏━━━━━━━┳━━━━━━━┓ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"┌─────────┬─────────┐\n\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "┌─────────┬─────────┐\n";
red_line===
"┌─────────┬─────────┐\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "┌─────────┬─────────┐\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┗━━━━━━━┹───────┘ \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┗━━━━━━━┹───────┘ \n";
red_line===
" ┗━━━━━━━┹───────┘ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " ┗━━━━━━━┹───────┘ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"┌───────────────────┐\n\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "┌───────────────────┐\n";
red_line===
"┌───────────────────┐\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "┌───────────────────┐\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"└───────────────────┘\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "└───────────────────┘";
red_line===
"└───────────────────┘"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += "└───────────────────┘";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┌───────┬───────┐ \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┌───────┬───────┐ \n";
red_line===
" ┌───────┬───────┐ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " ┌───────┬───────┐ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"├┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┤\n\" 13 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "├┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┤\n";
red_line===
"├┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┤\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "├┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┼┤\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                   \" 14 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                   ";
red_line===
"                   "
start_offset===
7
end_offset===
28
Python OUTPUT===
s += "                   ";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                   \n\" 14 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                   \n";
red_line===
"                   \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += "                   \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ├───────┼───────╆━━━━━━━┪ \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ├───────┼───────╆━━━━━━━┪ \n";
red_line===
" ├───────┼───────╆━━━━━━━┪ \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += " ├───────┼───────╆━━━━━━━┪ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"├─────────┼─────────┤\n\" 7 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "├─────────┼─────────┤\n";
red_line===
"├─────────┼─────────┤\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "├─────────┼─────────┤\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│┌┐│┌┐│┌┐│\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│┌┐│┌┐│┌┐│\n";
red_line===
"│┌┐│┌┐│┌┐│\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "│┌┐│┌┐│┌┐│\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"└─────────┴─────────┘\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "└─────────┴─────────┘";
red_line===
"└─────────┴─────────┘"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += "└─────────┴─────────┘";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"├───────────────────┤\n\" 9 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "├───────────────────┤\n";
red_line===
"├───────────────────┤\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "├───────────────────┤\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" │       ┃       ┃       │ \n\" 9 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " │       ┃       ┃       │ \n";
red_line===
" │       ┃       ┃       │ \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += " │       ┃       ┃       │ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ├───────┼───────┼───────┤ \n\" 9 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ├───────┼───────┼───────┤ \n";
red_line===
" ├───────┼───────┼───────┤ \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += " ├───────┼───────┼───────┤ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┃       ┃       │ \n\" 18 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┃       ┃       │ \n";
red_line===
" ┃       ┃       │ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " ┃       ┃       │ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┏━━━━━━━┱───────┐ \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┏━━━━━━━┱───────┐ \n";
red_line===
" ┏━━━━━━━┱───────┐ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " ┏━━━━━━━┱───────┐ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                       \" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                       ";
red_line===
"                       "
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "                       ";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" │       │       │       │ \n\" 69 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " │       │       │       │ \n";
red_line===
" │       │       │       │ \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += " │       │       │       │ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" └───────┴───────┘ \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " └───────┴───────┘ \n";
red_line===
" └───────┴───────┘ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " └───────┴───────┘ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐\n";
red_line===
"┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "┌┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┬┐\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│└┘│└┘│└┘│\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "│└┘│└┘│└┘│\n";
red_line===
"│└┘│└┘│└┘│\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "│└┘│└┘│└┘│\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" └───────┺━━━━━━━┛ \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " └───────┺━━━━━━━┛ \n";
red_line===
" └───────┺━━━━━━━┛ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " └───────┺━━━━━━━┛ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"┃┃││┃┃│││││││││││││││\n\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "┃┃││┃┃│││││││││││││││\n";
red_line===
"┃┃││┃┃│││││││││││││││\n"
start_offset===
7
end_offset===
32
Python OUTPUT===
s += "┃┃││┃┃│││││││││││││││\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                           \n\" 11 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                           \n";
red_line===
"                           \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += "                           \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" │         │         │ \n\" 14 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " │         │         │ \n";
red_line===
" │         │         │ \n"
start_offset===
7
end_offset===
34
Python OUTPUT===
s += " │         │         │ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┌───────┬───────┬───────┐ \n\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┌───────┬───────┬───────┐ \n";
red_line===
" ┌───────┬───────┬───────┐ \n"
start_offset===
7
end_offset===
38
Python OUTPUT===
s += " ┌───────┬───────┬───────┐ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ┗━━━━━━━┻━━━━━━━┛ \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ┗━━━━━━━┻━━━━━━━┛ \n";
red_line===
" ┗━━━━━━━┻━━━━━━━┛ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " ┗━━━━━━━┻━━━━━━━┛ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" │       ┃       ┃ \n\" 18 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " │       ┃       ┃ \n";
red_line===
" │       ┃       ┃ \n"
start_offset===
7
end_offset===
30
Python OUTPUT===
s += " │       ┃       ┃ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ├─────────┼─────────┤ \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " ├─────────┼─────────┤ \n";
red_line===
" ├─────────┼─────────┤ \n"
start_offset===
7
end_offset===
34
Python OUTPUT===
s += " ├─────────┼─────────┤ \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(text);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(text); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                              \n\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                              \n";
red_line===
"                              \n"
start_offset===
7
end_offset===
41
Python OUTPUT===
s += "                              \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"●         \n\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "●         \n";
red_line===
"●         \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "●         \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"         ●\n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "         ●\n";
red_line===
"         ●\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "         ●\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \n\" 7 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          \n";
red_line===
"          \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "          \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" *                           *\n\" 7 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " *                           *\n";
red_line===
" *                           *\n"
start_offset===
7
end_offset===
41
Python OUTPUT===
s += " *                           *\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas1.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas1.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"123       \n\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "123       \n";
red_line===
"123       \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "123       \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"    3     \n\" 9 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "    3     \n";
red_line===
"    3     \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "    3     \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"  1       \n\" 7 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "  1       \n";
red_line===
"  1       \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "  1       \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"    *     \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "    *     \n";
red_line===
"    *     \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "    *     \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"    li1lin\n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "    li1lin\n";
red_line===
"    li1lin\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "    li1lin\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"    li1lin\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "    li1lin";
red_line===
"    li1lin"
start_offset===
7
end_offset===
19
Python OUTPUT===
s += "    li1lin";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" ****\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
t += " ****\n";
red_line===
" ****\n"
start_offset===
7
end_offset===
16
Python OUTPUT===
t += " ****\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"        12\n\" 6 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "        12\n";
red_line===
"        12\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "        12\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"     *    \" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "     *    ";
red_line===
"     *    "
start_offset===
7
end_offset===
19
Python OUTPUT===
s += "     *    ";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"*        *\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "*        *";
red_line===
"*        *"
start_offset===
7
end_offset===
19
Python OUTPUT===
s += "*        *";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"  ****    \n\" 16 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "  ****    \n";
red_line===
"  ****    \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "  ****    \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"    li2lin\n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "    li2lin\n";
red_line===
"    li2lin\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "    li2lin\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"         *\n\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "         *\n";
red_line===
"         *\n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "         *\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" 2        \" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " 2        ";
red_line===
" 2        "
start_offset===
7
end_offset===
19
Python OUTPUT===
s += " 2        ";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"     *    \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "     *    \n";
red_line===
"     *    \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "     *    \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" Te…      \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " Te…      \n";
red_line===
" Te…      \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += " Te…      \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" Tes      \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " Tes      \n";
red_line===
" Tes      \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += " Tes      \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"Tes\n\nt\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
Text t = new Text("Tes\n\nt", 1, 1, 3, 2);
red_line===
"Tes\n\nt"
start_offset===
20
end_offset===
30
Python OUTPUT===
Text t = new Text("Tes\n\nt", 1, 1, 3, 2);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \" t        \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += " t        \n";
red_line===
" t        \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += " t        \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"********************\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
canvas.draw(0, 0, "********************");
red_line===
"********************"
start_offset===
20
end_offset===
42
Python OUTPUT===
canvas.draw(0, 0, "********************");
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
canvas.draw(0, 0, "*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n");
red_line===
"*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n"
start_offset===
20
end_offset===
52
Python OUTPUT===
canvas.draw(0, 0, "*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n");
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"          \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "          \n";
red_line===
"          \n"
start_offset===
7
end_offset===
21
Python OUTPUT===
s += "          \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                                                                                                      \n\" 6 times.
scn.ruleId===
1192
scn.suspCodeStr===
e += "                                                                                                      \n";
red_line===
"                                                                                                      \n"
start_offset===
7
end_offset===
113
Python OUTPUT===
e += "                                                                                                      \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                                                            \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
e += "                                                            \n";
red_line===
"                                                            \n"
start_offset===
8
end_offset===
72
Python OUTPUT===
e += "                                                            \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
3
end_offset===
13
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│     *     *      │\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
e += "│     *     *      │\n";
red_line===
"│     *     *      │\n"
start_offset===
7
end_offset===
31
Python OUTPUT===
e += "│     *     *      │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"PseudoText\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
builder.element(new PseudoText("PseudoText"));
red_line===
"PseudoText"
start_offset===
33
end_offset===
45
Python OUTPUT===
builder.element(new PseudoText("PseudoText"));
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
ICanvas canvas = render.render(builder.build());
red_line===
= render.render(builder.build())
start_offset===
17
end_offset===
49
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"********\" 6 times.
scn.ruleId===
1192
scn.suspCodeStr===
canvas.draw(4, 4, "********");
red_line===
"********"
start_offset===
20
end_offset===
30
Python OUTPUT===
canvas.draw(4, 4, "********");
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"********************\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
canvas.draw(0, 9, "********************");
red_line===
"********************"
start_offset===
20
end_offset===
42
Python OUTPUT===
canvas.draw(0, 9, "********************");
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
canvas.draw(19, 0, "*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n");
red_line===
"*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n"
start_offset===
21
end_offset===
53
Python OUTPUT===
canvas.draw(19, 0, "*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n");
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<String> texts = new ArrayList<String>(count);
red_line===
<String>
start_offset===
36
end_offset===
44
Python OUTPUT===
<> texts = new ArrayList < String > ( count ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
Deque<String> texts = new LinkedList<String>(textsY);
red_line===
<String>
start_offset===
39
end_offset===
47
Python OUTPUT===
<> texts = new LinkedList < String > ( textsY ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
Deque<String> texts = new LinkedList<String>(textsX);
red_line===
<String>
start_offset===
39
end_offset===
47
Python OUTPUT===
<> texts = new LinkedList < String > ( textsX ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"y\" which hides the field declared at line 43.
scn.ruleId===
1117
scn.suspCodeStr===
int y = this.y;
red_line===
y
start_offset===
6
end_offset===
7
Python OUTPUT===
int y = this.y;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Immediately return this expression instead of assigning it to the temporary variable \"font\".
scn.ruleId===
1488
scn.suspCodeStr===
Font font = Font.createFont(Font.TRUETYPE_FONT, is);
red_line===
Font.createFont(Font.TRUETYPE_FONT, is)
start_offset===
15
end_offset===
54
Python OUTPUT===
Font font = Font.createFont(Font.TRUETYPE_FONT, is);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"font\" which hides the field declared at line 46.
scn.ruleId===
1117
scn.suspCodeStr===
Font font = getFont().deriveFont(24);
red_line===
font
start_offset===
7
end_offset===
11
Python OUTPUT===
Font font = getFont().deriveFont(24);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"x\" which hides the field declared at line 42.
scn.ruleId===
1117
scn.suspCodeStr===
int x = this.x;
red_line===
x
start_offset===
6
end_offset===
7
Python OUTPUT===
int x = this.x;
isFixed===
false
==================
RuleType===
BUG
scn.errorMessage===
Cast one of the operands of this division operation to a \"double\".
scn.ruleId===
2184
scn.suspCodeStr===
double rmean = (c1.getRed() + c2.getRed()) / 2;
red_line===
/
start_offset===
45
end_offset===
46
Python OUTPUT===
 double rmean = (c1.getRed () + c2.getRed ())  / 2;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define and throw a dedicated exception instead of using a generic one.
scn.ruleId===
112
scn.suspCodeStr===
throw new RuntimeException(e);
red_line===
RuntimeException
start_offset===
13
end_offset===
29
Python OUTPUT===
throw new RuntimeException(e);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define and throw a dedicated exception instead of using a generic one.
scn.ruleId===
112
scn.suspCodeStr===
throw new RuntimeException(e);
red_line===
RuntimeException
start_offset===
13
end_offset===
29
Python OUTPUT===
throw new RuntimeException(e);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"height\" which hides the field declared at line 44.
scn.ruleId===
1117
scn.suspCodeStr===
int height = this.height;
red_line===
height
start_offset===
6
end_offset===
12
Python OUTPUT===
int height = this.height;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected Map<IElement, Set<ILayer>> layersByElement = new HashMap<IElement, Set<ILayer>>();
red_line===
<IElement, Set<ILayer>>
start_offset===
67
end_offset===
90
Python OUTPUT===
<> = new HashMap < IElement , Set < ILayer >> ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected Map<Class<ITypedIdentified<?>>, Map<Integer, ITypedIdentified<?>>> identifiedByType = new HashMap<Class<ITypedIdentified<?>>, Map<Integer, ITypedIdentified<?>>>();
red_line===
<Class<ITypedIdentified<?>>, Map<Integer, ITypedIdentified<?>>>
start_offset===
108
end_offset===
171
Python OUTPUT===
<> < Class < ITypedIdentified < ? >> , Map < Integer , ITypedIdentified < ? >> > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
LinkedHashSet<IElement> set = new LinkedHashSet<IElement>();
red_line===
<IElement>
start_offset===
49
end_offset===
59
Python OUTPUT===
<> set = new LinkedHashSet < IElement > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
LinkedHashSet<IElement> set = new LinkedHashSet<IElement>();
red_line===
<IElement>
start_offset===
49
end_offset===
59
Python OUTPUT===
<> set = new LinkedHashSet < IElement > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
return (List<E>) new ArrayList<IElement>(set);
red_line===
<IElement>
start_offset===
32
end_offset===
42
Python OUTPUT===
<> E > ) new ArrayList < IElement > ( set ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
return (List<E>) new ArrayList<IElement>(set);
red_line===
<IElement>
start_offset===
32
end_offset===
42
Python OUTPUT===
<> E > ) new ArrayList < IElement > ( set ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
return new ArrayList<T>(set);
red_line===
<T>
start_offset===
22
end_offset===
25
Python OUTPUT===
<> T > ( set ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<ILayer> list = new ArrayList<ILayer>();
red_line===
<ILayer>
start_offset===
35
end_offset===
43
Python OUTPUT===
<> list = new ArrayList < ILayer > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected Map<Class<ITypedIdentified<?>>, Map<Integer, ITypedIdentified<?>>> identifiedByType = new HashMap<Class<ITypedIdentified<?>>, Map<Integer, ITypedIdentified<?>>>();
red_line===
<Class<ITypedIdentified<?>>, Map<Integer, ITypedIdentified<?>>>
start_offset===
108
end_offset===
171
Python OUTPUT===
<> < Class < ITypedIdentified < ? >> , Map < Integer , ITypedIdentified < ? >> > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
map = new HashMap<Integer, ITypedIdentified<?>>();
red_line===
<Integer, ITypedIdentified<?>>
start_offset===
23
end_offset===
53
Python OUTPUT===
<> >> ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Immediately return this expression instead of assigning it to the temporary variable \"region\".
scn.ruleId===
1488
scn.suspCodeStr===
IRegion region = new Region(firstX, firstY, regionWidth, regionHeight);
red_line===
new Region(firstX, firstY, regionWidth, regionHeight)
start_offset===
19
end_offset===
72
Python OUTPUT===
IRegion region = new Region(firstX, firstY, regionWidth, regionHeight);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Immediately return this expression instead of assigning it to the temporary variable \"region\".
scn.ruleId===
1488
scn.suspCodeStr===
IRegion region = new Region(firstX, firstY, regionWidth, regionHeight);
red_line===
new Region(firstX, firstY, regionWidth, regionHeight)
start_offset===
19
end_offset===
72
Python OUTPUT===
IRegion region = new Region(firstX, firstY, regionWidth, regionHeight);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│                                                                               \n\" 19 times.
scn.ruleId===
1192
scn.suspCodeStr===
expected += "│                                                                               \n";
red_line===
"│                                                                               \n"
start_offset===
14
end_offset===
98
Python OUTPUT===
expected += "│                                                                               \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"     │                                                                          \n\" 14 times.
scn.ruleId===
1192
scn.suspCodeStr===
expected += "     │                                                                          \n";
red_line===
"     │                                                                          \n"
start_offset===
14
end_offset===
98
Python OUTPUT===
expected += "     │                                                                          \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"┌──────────────────────────────────────────────────────────────────────────────┐\n\" 5 times.
scn.ruleId===
1192
scn.suspCodeStr===
expected += "┌──────────────────────────────────────────────────────────────────────────────┐\n";
red_line===
"┌──────────────────────────────────────────────────────────────────────────────┐\n"
start_offset===
14
end_offset===
98
Python OUTPUT===
expected += "┌──────────────────────────────────────────────────────────────────────────────┐\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"PseudoText\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
PseudoText t = new PseudoText("PseudoText", true);
red_line===
"PseudoText"
start_offset===
32
end_offset===
44
Python OUTPUT===
PseudoText t = new PseudoText("PseudoText", true);
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"   ████             \n\" 4 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "   ████             \n";
red_line===
"   ████             \n"
start_offset===
7
end_offset===
31
Python OUTPUT===
s += "   ████             \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"  ██  ██            \n\" 3 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "  ██  ██            \n";
red_line===
"  ██  ██            \n"
start_offset===
7
end_offset===
31
Python OUTPUT===
s += "  ██  ██            \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                    \n\" 14 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                    \n";
red_line===
"                    \n"
start_offset===
7
end_offset===
31
Python OUTPUT===
s += "                    \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                                                                                                                        \n\" 12 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                                                                                                                        \n";
red_line===
"                                                                                                                        \n"
start_offset===
7
end_offset===
131
Python OUTPUT===
s += "                                                                                                                        \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                                                                                                                                                                                                                                                \n\" 26 times.
scn.ruleId===
1192
scn.suspCodeStr===
s += "                                                                                                                                                                                                                                                \n";
red_line===
"                                                                                                                                                                                                                                                \n"
start_offset===
7
end_offset===
251
Python OUTPUT===
s += "                                                                                                                                                                                                                                                \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
ICanvas canvas = new Canvas(19, 11);
red_line===
= new Canvas(19, 11)
start_offset===
17
end_offset===
37
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this unused \"context\" local variable.
scn.ruleId===
1481
scn.suspCodeStr===
IContext context = mock(IContext.class);
red_line===
context
start_offset===
11
end_offset===
18
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
ICanvas canvas = render.render(builder.build());
red_line===
= render.render(builder.build())
start_offset===
17
end_offset===
49
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
canvas = render.render(builder.build());
red_line===
= render.render(builder.build())
start_offset===
9
end_offset===
41
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(t);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(t); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected List<AxisLabel> labels = new ArrayList<AxisLabel>();
red_line===
<AxisLabel>
start_offset===
49
end_offset===
60
Python OUTPUT===
<> > labels = new ArrayList < AxisLabel > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Refactor the code in order to not assign to this loop counter from within the loop body.
scn.ruleId===
127
scn.suspCodeStr===
y += dy1;
red_line===
y
start_offset===
4
end_offset===
5
Python OUTPUT===
y += dy1;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Refactor the code in order to not assign to this loop counter from within the loop body.
scn.ruleId===
127
scn.suspCodeStr===
x += dx1;
red_line===
x
start_offset===
4
end_offset===
5
Python OUTPUT===
x += dx1;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Refactor the code in order to not assign to this loop counter from within the loop body.
scn.ruleId===
127
scn.suspCodeStr===
y += dy2;
red_line===
y
start_offset===
4
end_offset===
5
Python OUTPUT===
y += dy2;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Refactor the code in order to not assign to this loop counter from within the loop body.
scn.ruleId===
127
scn.suspCodeStr===
x += dx2;
red_line===
x
start_offset===
4
end_offset===
5
Python OUTPUT===
x += dx2;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Rename \"height\" which hides the field declared at line 27.
scn.ruleId===
1117
scn.suspCodeStr===
int height = this.height;
red_line===
height
start_offset===
6
end_offset===
12
Python OUTPUT===
int height = this.height;
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
this.elements = new ArrayList<IElement>(size);
red_line===
<IElement>
start_offset===
31
end_offset===
41
Python OUTPUT===
<> new ArrayList < IElement > ( size ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
this.highlights = new ArrayList<Boolean>(size);
red_line===
<Boolean>
start_offset===
33
end_offset===
42
Python OUTPUT===
<> new ArrayList < Boolean > ( size ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
set = new LinkedHashSet<ILayer>();
red_line===
<ILayer>
start_offset===
27
end_offset===
35
Python OUTPUT===
<> < ILayer > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
LinkedHashSet<Class<?>> ancestors = new LinkedHashSet<Class<?>>();
red_line===
<Class<?>>
start_offset===
55
end_offset===
65
Python OUTPUT===
<> = new LinkedHashSet < Class < ? >> ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
protected static final Map<Byte, Character> QUADRANTS = new LinkedHashMap<Byte, Character>();
red_line===
<Byte, Character>
start_offset===
74
end_offset===
91
Python OUTPUT===
<> Character > QUADRANTS = new LinkedHashMap < Byte , Character > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(trimmed.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(trimmed.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"                                                                                \n\" 14 times.
scn.ruleId===
1192
scn.suspCodeStr===
expected += "                                                                                \n";
red_line===
"                                                                                \n"
start_offset===
14
end_offset===
98
Python OUTPUT===
expected += "                                                                                \n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace the type specification in this constructor call with the diamond operator (\"\u003c\u003e\"). (sonar.java.source not set. Assuming 7 or greater.)
scn.ruleId===
2293
scn.suspCodeStr===
List<IPlotPoint> points = new ArrayList<IPlotPoint>();
red_line===
<IPlotPoint>
start_offset===
41
end_offset===
53
Python OUTPUT===
<> points = new ArrayList < IPlotPoint > ( ) ;
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"canvas\".
scn.ruleId===
1854
scn.suspCodeStr===
ICanvas canvas = new Canvas(19, 11);
red_line===
= new Canvas(19, 11)
start_offset===
17
end_offset===
37
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"context\".
scn.ruleId===
1854
scn.suspCodeStr===
IContext context = mock(IContext.class);
red_line===
= mock(IContext.class)
start_offset===
19
end_offset===
41
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Remove this useless assignment to local variable \"e\".
scn.ruleId===
1854
scn.suspCodeStr===
e += "                                                                                                      ";
red_line===
+= "                                                                                                      "
start_offset===
4
end_offset===
111
Python OUTPUT===
 
isFixed===
true
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
3
end_offset===
13
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"┌──────────────────┐\n\" 8 times.
scn.ruleId===
1192
scn.suspCodeStr===
e += "┌──────────────────┐\n";
red_line===
"┌──────────────────┐\n"
start_offset===
7
end_offset===
31
Python OUTPUT===
e += "┌──────────────────┐\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(s);
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(s); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Define a constant instead of duplicating this literal \"│                  │\n\" 38 times.
scn.ruleId===
1192
scn.suspCodeStr===
e += "│                  │\n";
red_line===
"│                  │\n"
start_offset===
7
end_offset===
31
Python OUTPUT===
e += "│                  │\n";
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas1.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas1.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
RuleType===
CODE_SMELL
scn.errorMessage===
Replace this use of System.out or System.err by a logger.
scn.ruleId===
106
scn.suspCodeStr===
System.out.println(canvas.getText());
red_line===
System.out
start_offset===
2
end_offset===
12
Python OUTPUT===
 System.out.println(canvas.getText()); 
isFixed===
false
==================
